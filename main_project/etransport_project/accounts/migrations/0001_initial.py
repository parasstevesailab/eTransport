# Generated by Django 5.2 on 2025-05-07 09:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("industrial_owner", "Industrial Owner"),
                            ("vehicle_owner", "Vehicle Owner"),
                            ("admin", "Admin"),
                        ],
                        max_length=20,
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("contact_no", models.CharField(max_length=30, null=True, unique=True)),
                ("address", models.TextField(blank=True, null=True)),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "verification_code",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("company_address", models.TextField(blank=True, null=True)),
                (
                    "company_reg_no",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("designation", models.CharField(blank=True, max_length=30, null=True)),
                ("has_submitted_vehicle_docs", models.BooleanField(default=False)),
                ("has_submitted_industrial_docs", models.BooleanField(default=False)),
                ("is_vehicle_owner", models.BooleanField(default=False)),
                ("is_industrial_owner", models.BooleanField(default=False)),
                ("doc_is_approved", models.BooleanField(default=False)),
                (
                    "vehicle_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("vehicle_no", models.CharField(blank=True, max_length=30, null=True)),
                ("fleet_size", models.PositiveIntegerField(default=1)),
                ("services_offered", models.TextField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("post_id", models.CharField(max_length=5, unique=True)),
                ("source_location", models.CharField(max_length=255)),
                ("destination_location", models.CharField(max_length=255)),
                ("weight", models.DecimalField(decimal_places=2, max_digits=10)),
                ("distance_km", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("status", models.CharField(default="open", max_length=50)),
                ("delivery_deadline", models.DateTimeField(blank=True, null=True)),
                ("first_payment_made", models.BooleanField(default=False)),
                ("second_payment_made", models.BooleanField(default=False)),
                (
                    "accepted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="accepted_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "industrial_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeliveryStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "vehicle_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_updates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_updates",
                        to="accounts.post",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Delivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pickup_time", models.DateTimeField(blank=True, null=True)),
                (
                    "estimated_delivery_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("actual_delivery_time", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(default="pending", max_length=50)),
                (
                    "vehicle_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "post",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery",
                        to="accounts.post",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IndustrialOwnerDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("industrial_certificate", "Industrial Certificate"),
                            ("industrial_license", "Industrial License"),
                            ("identity_proof", "Identity Proof"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "document_image",
                    models.ImageField(upload_to="industrial_documents/%Y/%m/%d/"),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="industrial_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "document_type")},
            },
        ),
        migrations.CreateModel(
            name="VehicleOwnerDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("vehicle_registration", "Vehicle Registration"),
                            ("driving_license", "Driving License"),
                            ("identity_proof", "Identity Proof"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "document_image",
                    models.ImageField(upload_to="vehicle_documents/%Y/%m/%d/"),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicle_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "document_type")},
            },
        ),
    ]
